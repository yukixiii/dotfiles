[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
on_source = ['unite.vim', 'vimshell.vim']

[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "has('lua')"
on_event = 'InsertEnter'
hook_source = '''
	let g:neocomplete#enable_at_startup = 1
	source ~/.config/nvim/rc/neocomplete.rc.vim
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
	" snippets
	imap <C-d> <Plug>(neosnippet_expand_or_jump)
	smap <C-d> <Plug>(neosnippet_expand_or_jump)
	xmap <C-d> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
on_source = 'denite.nvim'
hook_source = 'source ~/.config/nvim/rc/unite.rc.vim'
hook_add = '''
	" nmap ,a :<C-u>Unite buffer_tab file file_mru<CR>
	" nmap ,t :<C-u>Unite buffer_tab<CR>
	" nmap ,g :<C-u>UniteWithBufferDir file file/new directory/new<CR>
	" nmap ,j :<C-u>Unite file file/new directory/new<CR>
	nmap ,b :<C-u>Unite bookmark:default -input=[<CR>
	nmap ,v :<C-u>Unite bookmark:default -input=[ -default-action=vimfiler<CR>
	nmap ,e :<C-u>UniteResume<CR>
	" nmap <Leader>o :<C-u>Unite outline<CR>
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = 'source ~/.config/nvim/rc/denite.rc.vim'
hook_add = '''
	" nmap ,a :<C-u>Denite buffer_tab file file_mru<CR>
	nmap ,t :<C-u>Denite buffer<CR>
	nmap ,m :<C-u>Denite file_mru<CR>
	nmap ,r :<C-u>Denite file_rec<CR>
	nmap ,p :<C-u>Denite file_rec/git<CR>
	nmap ,g :<C-u>DeniteBufferDir file file:new<CR>
	nmap ,j :<C-u>Denite file file:new<CR>
	nmap ,/ :<C-u>Denite line<CR>
	nmap ,n/ :<C-u>Denite line -no-quit<CR>
	nmap ,w :<C-u>Denite -resume<CR>
	nmap <Leader>gr :<C-u>Denite grep<CR>
	nmap <Leader>o :<C-u>Denite outline<CR>
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_source = 'source ~/.config/nvim/rc/vimfiler.rc.vim'
hook_add = '''
	nmap ,f :<C-u>VimFiler<CR>
	nmap ,d :<C-u>VimFilerBufferDir<CR>
'''

[[plugins]]
repo = 'Shougo/vimshell.vim'
on_source = ['vimfiler.vim']
# on_map = {n = '<Plug>'}

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_if = 1

# [[plugins]]
# repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
	nmap <Leader>q :<C-u>QuickRun<CR>
'''

[[plugins]]
repo = 'vim-vdebug/vdebug'
on_ft = 'php'
hook_source = '''
	let g:vdebug_options = {
	\    'port' : 9000,
	\    'server' : '',
	\    'timeout' : 20,
	\    'on_close' : 'detach',
	\    'break_on_open' : 1,
	\    'ide_key' : '',
	\    'path_maps' : {
	\         '/var/www/html': '/home/yuki/docker/mnt/eyefile'
	\    },
	\    'continuous_mode' : 1,
	\    'debug_window_level' : 0,
	\    'debug_file_level' : 0,
	\    'debug_file' : '',
	\    'watch_window_style' : 'expanded',
	\    'marker_default' : '⬦',
	\    'marker_closed_tree' : '▸',
	\    'marker_open_tree' : '▾'
	\}
'''

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript.jsx']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript.jsx']

[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoGrep']
hook_source = 'source ~/.config/nvim/rc/memolist.rc.vim'
hook_add = '''
	nnoremap <Leader>mn  :<C-u>MemoNew<CR>
	nnoremap <Leader>ml  :<C-u>MemoList<CR>
	nnoremap <Leader>mg  :<C-u>MemoGrep<CR>
'''

[[plugins]]
repo = 'kannokanno/previm'
on_cmd = ['PrevimOpen']
hook_add = '''
	nmap <Leader>p :<C-u>PrevimOpen<CR>
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'topl'
